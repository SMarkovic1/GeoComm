import arcpy
from tqdm.notebook import tqdm

# inputs, first is your main dataset, second is your reference
roads_fc = r"C:\Users\Stefan\Documents\ArcGIS\Projects\removed.gdb\MnRdFtoL_SpatialJoin1"
ref_fc = r"C:\Users\Stefan\Documents\ArcGIS\Projects\removed.gdb\UHWY"

# spatial selection classes
arcpy.MakeFeatureLayer_management(roads_fc, "roads_lyr")
arcpy.MakeFeatureLayer_management(ref_fc, "ref_lyr")

# road hierarchy
road_hierarchy = ['I', 'UHWY', 'SHWY', 'CR']

# set a threshold. This is a percentage of the road that falls within the buffer.
threshold = 0.90

total_roads = int(arcpy.GetCount_management("ref_lyr").getOutput(0))
pbar = tqdm(total=total_roads, desc="Processing roads")

for road_type in road_hierarchy:
    arcpy.SelectLayerByAttribute_management("ref_lyr", "NEW_SELECTION", f"Type = '{road_type}'")
    
    with arcpy.da.SearchCursor("ref_lyr", ["SHAPE@", "Name", "Type"]) as cursor:
        for ref_row in cursor:
            ref_buffer = ref_row[0].buffer(15) #change this buffer to produce more accurate results, it is in meters.
            
            if arcpy.Exists("in_memory\\tempBuffer"):
                arcpy.Delete_management("in_memory\\tempBuffer")
            
            # Store the buffer geometry in an in-memory feature class, otherwise script will fail as your memory fills
            arcpy.CopyFeatures_management(ref_buffer, "in_memory\\tempBuffer")
            
            arcpy.SelectLayerByLocation_management("roads_lyr", "INTERSECT", "in_memory\\tempBuffer")

            with arcpy.da.UpdateCursor("roads_lyr", ["SHAPE@", "SDIRPRE", "SFEANME", "SFEATYP", "SDIRSUF", 
                                                    "ALIAS1_PRE", "ALIAS1_NAM", "ALIAS1_TYP", "ALIAS1_SUF", 
                                                    "ALIAS2_PRE", "ALIAS2_NAM", "ALIAS2_TYP", "ALIAS2_SUF", 
                                                    "ALIAS3_PRE", "ALIAS3_NAM", "ALIAS3_TYP", "ALIAS3_SUF"]) as update_cursor:
                for update_row in update_cursor:
                    intersection = ref_buffer.intersect(update_row[0], 2)
                    intersection_length = intersection.length
                    
                    if intersection_length / update_row[0].length >= threshold:
                        update_row[13], update_row[14], update_row[15], update_row[16] = update_row[9], update_row[10], update_row[11], update_row[12]
                        update_row[9], update_row[10], update_row[11], update_row[12] = update_row[5], update_row[6], update_row[7], update_row[8]
                        update_row[5], update_row[6], update_row[7], update_row[8] = update_row[1], update_row[2], update_row[3], update_row[4]

                        update_row[1], update_row[2], update_row[3], update_row[4] = None, ref_row[1], ref_row[2], None
                        update_cursor.updateRow(update_row)

            pbar.update(1)

pbar.close()
arcpy.Delete_management("roads_lyr")
arcpy.Delete_management("ref_lyr")
arcpy.Delete_management("in_memory\\tempBuffer")
print("done!")
